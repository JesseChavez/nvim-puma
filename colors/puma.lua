-- colors/colorscheme.lua

local colors = {
  Normal = { fg = "#e8e8d3", bg = "#151515" },               -- plain text
  NvimSpacing = {link = "Normal"},
  cssMediaComma = {link = "Normal"},
  dtdTag = {link = "Normal"},
  ALEWarningSign = {fg = "#ffff00"},
  CmpItemAbbr = {},
  CmpItemAbbrDefault = {fg = "#ffffff"},
  CmpItemAbbrDeprecated = {},
  CmpItemAbbrDeprecatedDefault = {fg = "#888888"},
  CmpItemAbbrMatch = {},
  CmpItemAbbrMatchDefault = {fg = "#ffffff"},
  CmpItemAbbrMatchFuzzy = {},
  CmpItemAbbrMatchFuzzyDefault = {fg = "#ffffff"},
  CmpItemKind = {},
  CmpItemKindClassDefault = {link = "CmpItemKind"},
  CmpItemKindColorDefault = {link = "CmpItemKind"},
  CmpItemKindConstantDefault = {link = "CmpItemKind"},
  CmpItemKindConstructorDefault = {link = "CmpItemKind"},
  CmpItemKindEnumDefault = {link = "CmpItemKind"},
  CmpItemKindEnumMemberDefault = {link = "CmpItemKind"},
  CmpItemKindEventDefault = {link = "CmpItemKind"},
  CmpItemKindFieldDefault = {link = "CmpItemKind"},
  CmpItemKindFileDefault = {link = "CmpItemKind"},
  CmpItemKindFolderDefault = {link = "CmpItemKind"},
  CmpItemKindFunctionDefault = {link = "CmpItemKind"},
  CmpItemKindInterfaceDefault = {link = "CmpItemKind"},
  CmpItemKindKeywordDefault = {link = "CmpItemKind"},
  CmpItemKindMethodDefault = {link = "CmpItemKind"},
  CmpItemKindModuleDefault = {link = "CmpItemKind"},
  CmpItemKindOperatorDefault = {link = "CmpItemKind"},
  CmpItemKindPropertyDefault = {link = "CmpItemKind"},
  CmpItemKindReferenceDefault = {link = "CmpItemKind"},
  CmpItemKindSnippetDefault = {link = "CmpItemKind"},
  CmpItemKindStructDefault = {link = "CmpItemKind"},
  CmpItemKindTextDefault = {link = "CmpItemKind"},
  CmpItemKindTypeParameterDefault = {link = "CmpItemKind"},
  CmpItemKindUnitDefault = {link = "CmpItemKind"},
  CmpItemKindValueDefault = {link = "CmpItemKind"},
  CmpItemKindVariableDefault = {link = "CmpItemKind"},
  CmpItemKindClass = {},
  CmpItemKindColor = {},
  CmpItemKindConstant = {},
  CmpItemKindConstructor = {},
  CmpItemKindDefault = {fg = "#799d6a"},
  CmpItemKindEnum = {},
  CmpItemKindEnumMember = {},
  CmpItemKindEvent = {},
  CmpItemKindField = {},
  CmpItemKindFile = {},
  CmpItemKindFolder = {},
  CmpItemKindFunction = {},
  CmpItemKindInterface = {},
  CmpItemKindKeyword = {},
  CmpItemKindMethod = {},
  CmpItemKindModule = {},
  CmpItemKindOperator = {},
  CmpItemKindProperty = {},
  CmpItemKindReference = {},
  CmpItemKindSnippet = {},
  CmpItemKindStruct = {},
  CmpItemKindText = {},
  CmpItemKindTypeParameter = {},
  CmpItemKindUnit = {},
  CmpItemKindValue = {},
  CmpItemKindVariable = {},
  CmpItemMenu = {},
  CmpItemMenuDefault = {fg = "#ffffff"},
  CocErrorHighlight = {sp = "red", undercurl = true},
  CocInfoHighlight = {sp = "red", undercurl = true},
  CocWarningHighlight = {sp = "orange", undercurl = true},
  ColorColumn = {bg = "#000000"},

  -- Base language highlight groups
  -- https://vimhelp.org/syntax.txt.html#group-name
  Comment    = { fg = "#888888", italic = true },
  Identifier = { fg = "#e8e8d3" },          -- Identifier = {fg = "#c6b6ee"},
  PreProc    = { fg = "#a3ddff" },          -- PreProc = {fg = "#8fbfdc"},          -- import libraries
  Type       = { fg = "#ffb964" },          -- class name in definition
  Keyword    = { fg = "#8fbfdc" },          -- Keyword = {fg = "#8197bf"}, -- all language keywords
  Statement  = { fg = "#8197bf" },          -- if, else, case, etc. override generic keyword rule
  Function   = { fg = "#fad07a" },          -- function or method calls
  Operator   = { fg = "#e0ffff" },          -- e.g. =, &&, ||, etc.
  Constant   = { fg = "#cf6a4c" },
  String     = { fg = "#99ad6a" },
  Special    = { fg = "#c6b6ee" },          -- Special    = { fg = "#799d6a" },
  Label      = { fg = "#c6b6ee" },          -- ruby instance variable, Label = {fg = "#8197bf"},
  Todo       = { fg = "#c7c7c7", bg = "#151515", bold = true },
  Symbol     = { fg = "#7697d6" },          -- custom highlight group
  Regex      = { fg = "#dd0093" },          -- custom highlight group
  Param      = { fg = "#799d6a" },          -- custom highlight group, method or function parameter
  ParamCall  = { fg = "#b5ccab" },          -- custom highlight group

  -- Base treesitter highlight groups
  ["@comment"]            = { link = "Comment" },
  ["@operator"]           = { link = "Operator" },
  ["@label"]              = { link = "Label" },
  ["@keyword"]            = { link = "Keyword" },
  ["@keyword.return"]     = { link = "Statement" },
  ["@keyword.operator"]   = { link = "Special" },
  ["@type.qualifier"]     = { link = "Keyword" },
  ["@function.call"]      = { link = "Identifier" },
  ["@symbol"]             = { link = "Symbol" },              -- ruby symbol
  ["@property"]           = { link = "Symbol" },              -- javascript object key
  ["@lsp.type.property"]  = { link = "Symbol" },              -- javascript object key
  ["@constant"]           = { link = "Constant" },
  ["@constant.builtin"]   = { link = "Constant" },
  ["@variable.builtin"]   = { link = "Constant" },            -- this, self
  ["@punctuation"]        = { link = "Special" },
  ["@parameter"]          = { link = "Param" },
  ["@lsp.type.parameter"] = { link = "Param" },
  ["@constructor"]        = { link = "Type" },
  ["@string.regex"]       = { link = "Regex" },
  ["@field.yaml"]         = { link = "Special" },
  ["@text.todo"]          = { link = "Todo" }, -- requires the comment parser
  ["@text.note"]          = { link = "Todo" },
  ["@text.danger"]        = { link = "Todo" }, -- this is for fixme
  -- ["@lsp.type.function"] = { fg = "#ffe6b3" },
  ["@constructor.tsx"]    = { fg = "#ffe6b3" },
  ["@tag.attribute.tsx"]  = { link = "Type" },

  ["@property.tsx"]       = { link = "Identifier" },
  ["@lsp.type.property.typescriptreact"]                 = { fg = "#cccccc" },
  ["@lsp.type.member.typescriptreact"]                   = { link = "Identifier" },
  ["@lsp.type.parameter.typescriptreact"]                = { link = "ParamCall" },
  ["@lsp.mod.declaration.typescriptreact"]               = { link = "Identifier" },
  ["@lsp.typemod.class.declaration.typescriptreact"]     = { link = "Type" },
  ["@lsp.typemod.parameter.declaration.typescriptreact"] = { link = "Param" },
  ["@lsp.typemod.property.declaration.typescriptreact"]  = { link = "Symbol" },
  ["@lsp.typemod.member.declaration.typescriptreact"]    = { link = "Function" },

  -- other custom
  yamlBlockMappingKey = { link = "Special" },

  DiagnosticUnnecessary = {link = "Comment"},
  cssComment = {link = "Comment"},
  cssHacks = {link = "Comment"},
  cssVendor = {link = "Comment"},
  dtdComment = {link = "Comment"},
  htmlComment = {link = "Comment"},
  htmlCssStyleComment = {link = "Comment"},
  javaScriptComment = {link = "Comment"},
  javaScriptLineComment = {link = "Comment"},
  luaComment = {link = "Comment"},
  markdownBlockquote = {link = "Comment"},
  vbComment = {link = "Comment"},
  vbLineLabel = {link = "Comment"},
  vbLineNumber = {link = "Comment"},
  xmlAttribPunct = {link = "Comment"},
  xmlComment = {link = "Comment"},
  xmlCommentPart = {link = "Comment"},
  yamlComment = {link = "Comment"},
  ["@lsp.type.comment"] = {link = "Comment"},
  ["@text.literal"] = {link = "Comment"},
  Conceal = {fg = "lightgrey", bg = "darkgrey"},
  Boolean = {link = "Constant"},
  Character = {link = "Constant"},
  Number = {link = "Constant"},
  cssAttr = {link = "Constant"},
  cssColor = {link = "Constant"},
  cssFunction = {link = "Constant"},
  cssKeyFrameProp = {link = "Constant"},
  cssPseudoClassLang = {link = "Constant"},
  cssUnicodeRange = {link = "Constant"},
  dtdConstant = {link = "Constant"},
  jsThis = {link = "Constant"},
  luaConstant = {link = "Constant"},
  typescriptIdentifier = {link = "Constant"},
  vbConst = {link = "Constant"},
  vbDefine = {link = "Constant"},
  yamlConstant = {link = "Constant"},
  ["@lsp.type.enumMember"] = {link = "Constant"},
  -- FIXME: Cursor = {fg = "bg", bg = "fg"},
  CursorColumn = {bg = "#1c1c1c"},
  CursorLine = {bg = "#404040"},
  CursorLineNr = {fg = "#dadada", bg = "#090909"},
  DiagnosticDeprecated = {sp = "red", strikethrough = true},
  DiagnosticError = {fg = "red"},
  DiagnosticFloatingError = {link = "DiagnosticError"},
  DiagnosticSignError = {link = "DiagnosticError"},
  DiagnosticVirtualTextError = {link = "DiagnosticError"},
  DiagnosticHint = {fg = "lightgrey"},
  DiagnosticFloatingHint = {link = "DiagnosticHint"},
  DiagnosticSignHint = {link = "DiagnosticHint"},
  DiagnosticVirtualTextHint = {link = "DiagnosticHint"},
  DiagnosticInfo = {fg = "lightblue"},
  DiagnosticFloatingInfo = {link = "DiagnosticInfo"},
  DiagnosticSignInfo = {link = "DiagnosticInfo"},
  DiagnosticVirtualTextInfo = {link = "DiagnosticInfo"},
  DiagnosticOk = {fg = "lightgreen"},
  DiagnosticFloatingOk = {link = "DiagnosticOk"},
  DiagnosticSignOk = {link = "DiagnosticOk"},
  DiagnosticVirtualTextOk = {link = "DiagnosticOk"},
  DiagnosticUnderlineError = {sp = "red", undercurl = true},
  DiagnosticUnderlineHint = {sp = "lightgrey", undercurl = true},
  DiagnosticUnderlineInfo = {sp = "lightblue", undercurl = true},
  DiagnosticUnderlineOk = {sp = "lightgreen", underline = true},
  DiagnosticUnderlineWarn = {sp = "orange", undercurl = true},
  DiagnosticWarn = {fg = "orange"},
  DiagnosticFloatingWarn = {link = "DiagnosticWarn"},
  DiagnosticSignWarn = {link = "DiagnosticWarn"},
  DiagnosticVirtualTextWarn = {link = "DiagnosticWarn"},
  DiffAdd = {fg = "green", bg = "#151515"},
  DiffChange = {fg = "magenta", bg = "#151515"},
  DiffDelete = {fg = "red", bg = "#151515", bold = true},
  DiffText = {bg = "red", bold = true},
  Directory = {fg = "#fad07a"},
  FileBeagleDirectoryEntry = {link = "Directory"},
  Error = {fg = "#ff0000", bg = "#151515"},
  NvimInvalid = {link = "Error"},
  cssBraceError = {link = "Error"},
  cssDeprecated = {link = "Error"},
  cssError = {link = "Error"},
  dtdError = {link = "Error"},
  htmlError = {link = "Error"},
  htmlPreError = {link = "Error"},
  htmlPreProcAttrError = {link = "Error"},
  javaScriptError = {link = "Error"},
  luaError = {link = "Error"},
  luaParenError = {link = "Error"},
  markdownError = {link = "Error"},
  vbError = {link = "Error"},
  xmlCommentError = {link = "Error"},
  xmlError = {link = "Error"},
  yamlReservedDirective = {link = "Error"},
  ErrorMsg = {fg = "white", bg = "red"},
  NvimInvalidSpacing = {link = "ErrorMsg"},
  FloatShadow = {bg = "black", blend = 80},
  FloatShadowThrough = {bg = "black", blend = 100},
  FoldColumn = {fg = "darkblue", bg = "grey"},
  CursorLineFold = {link = "FoldColumn"},
  Folded = {fg = "darkblue", bg = "lightgrey"},
  cssBraces = {link = "Function"},
  cssClassName = {link = "Function"},
  cssClassNameDot = {link = "Function"},
  cssFunctionComma = {link = "Function"},
  cssFunctionName = {link = "Function"},
  cssIdentifier = {link = "Function"},
  dtdFunction = {link = "Function"},
  javaScriptBraces = {link = "Function"},
  javaScriptFunction = {link = "Function"},
  luaFunction = {link = "Function"},
  luaMetaMethod = {link = "Function"},
  xmlInlineDTD = {link = "Function"},
  ["@function"] = {link = "Function"},
  ["@lsp.type.decorator"] = {link = "Function"},
--  ["@lsp.type.function"] = {link = "Function"},
--  ["@lsp.type.method"] = {link = "Function"},
  ["@method"] = {link = "Function"},
  GitSignsAdd = {},
  GitSignsAddInline = {},
  GitSignsAddLn = {},
  GitSignsAddLnInline = {},
  GitSignsAddNr = {},
  GitSignsAddPreview = {},
  GitSignsChange = {},
  GitSignsChangeInline = {},
  GitSignsChangeLn = {},
  GitSignsChangeLnInline = {},
  GitSignsChangeNr = {},
  GitSignsChangedelete = {},
  GitSignsChangedeleteLn = {},
  GitSignsChangedeleteNr = {},
  GitSignsCurrentLineBlame = {},
  GitSignsDelete = {},
  GitSignsDeleteInline = {},
  GitSignsDeleteLnInline = {},
  GitSignsDeleteNr = {},
  GitSignsDeletePreview = {},
  GitSignsDeleteVirtLn = {},
  GitSignsDeleteVirtLnInLine = {},
  GitSignsStagedAdd = {fg = "#004000", bg = "#151515"},
  GitSignsStagedAddLn = {fg = "#004000", bg = "#151515"},
  GitSignsStagedAddNr = {fg = "#004000", bg = "#151515"},
  GitSignsStagedChange = {fg = "#7f007f", bg = "#151515"},
  GitSignsStagedChangeLn = {fg = "#7f007f", bg = "#151515"},
  GitSignsStagedChangeNr = {fg = "#7f007f", bg = "#151515"},
  GitSignsStagedChangedelete = {fg = "#7f007f", bg = "#151515"},
  GitSignsStagedChangedeleteLn = {fg = "#7f007f", bg = "#151515"},
  GitSignsStagedChangedeleteNr = {fg = "#7f007f", bg = "#151515"},
  GitSignsStagedDelete = {fg = "#7f0000", bg = "#151515"},
  GitSignsStagedDeleteNr = {fg = "#7f0000", bg = "#151515"},
  GitSignsStagedTopdelete = {fg = "#7f0000", bg = "#151515"},
  GitSignsStagedTopdeleteNr = {fg = "#7f0000", bg = "#151515"},
  GitSignsTopdelete = {},
  GitSignsTopdeleteNr = {},
  GitSignsUntracked = {},
  GitSignsUntrackedLn = {},
  GitSignsUntrackedNr = {},
  GitSignsVirtLnum = {},
  IblScope = {fg = "#777777", bg = "#151515"},
  NvimIdentifier = {link = "Identifier"},
  javaScriptIdentifier = {link = "Identifier"},
  luaFunc = {link = "Identifier"},
  rubyInterpolationDelimiter = {link = "Identifier"},
  vbFunction = {link = "Identifier"},
  vbIdentifier = {link = "Identifier"},
  yamlFlowMappingKey = {link = "Identifier"},
  ["@field"] = {link = "Identifier"},
  -- ["@lsp.type.parameter"] = {link = "Identifier"},
  -- ["@lsp.type.property"] = {link = "Identifier"},
  ["@lsp.type.variable"] = {link = "Identifier"},
  ["@namespace"] = {link = "Identifier"},
  -- ["@property"] = {link = "Identifier"},
  ["@text.reference"] = {link = "Identifier"},
  ["@variable"] = {link = "Identifier"},
  -- FIXME: Ignore = {fg = "bg"},
  IncSearch = {reverse = true},
  javaScriptGlobal = {link = "Keyword"},
  javaScriptMember = {link = "Keyword"},
  javaScriptMessage = {link = "Keyword"},
  javaScriptNull = {link = "Keyword"},
  javaScriptReserved = {link = "Keyword"},
  jsSuper = {link = "Keyword"},
  yamlDirectiveName = {link = "Keyword"},
  javaScriptConstant = {link = "Label"},
  javaScriptLabel = {link = "Label"},
  luaLabel = {link = "Label"},
  yamlBlockCollectionItemStart = {link = "Label"},
  LineNr = {fg = "#777777", bg = "#151515"},
  LineNrAbove = {link = "LineNr"},
  LineNrBelow = {link = "LineNr"},
  LspInfoBorder = {},
  LspInfoFiletype = {},
  LspInfoList = {},
  LspInfoTip = {},
  LspInfoTitle = {},
  MatchParen = {bg = "cyan"},
  ModeMsg = {bold = true},
  MoreMsg = {fg = "seagreen", bold = true},
  NonText = {fg = "#606060", bg = "#151515", bold = true},
  EndOfBuffer = {link = "NonText"},
  FidgetTask = {link = "NonText"},
  IblIndent = {link = "NonText"},
  IblWhitespace = {link = "NonText"},
  Whitespace = {link = "NonText"},
  NvimInternalError = {fg = "red", bg = "red"},
  NvimFigureBrace = {link = "NvimInternalError"},
  NvimInvalidSingleQuotedUnknownEscape = {link = "NvimInternalError"},
  NvimSingleQuotedUnknownEscape = {link = "NvimInternalError"},
  Pmenu = {fg = "#ffffff", bg = "#606060"},
  NormalFloat = {link = "Pmenu"},
  PmenuExtra = {link = "Pmenu"},
  PmenuKind = {link = "Pmenu"},
  PmenuSbar = {bg = "grey"},
  PmenuSel = {fg = "#101010", bg = "#eeeeee"},
  PmenuExtraSel = {link = "PmenuSel"},
  PmenuKindSel = {link = "PmenuSel"},
  PmenuThumb = {bg = "white"},
  Define = {link = "PreProc"},
  Include = {link = "PreProc"},
  Macro = {link = "PreProc"},
  PreCondit = {link = "PreProc"},
  cssAtKeyword = {link = "PreProc"},
  cssPagePseudo = {link = "PreProc"},
  cssPseudoClassId = {link = "PreProc"},
  htmlHead = {link = "PreProc"},
  htmlPreProc = {link = "PreProc"},
  htmlPreProcAttrName = {link = "PreProc"},
  htmlPreStmt = {link = "PreProc"},
  markdownRule = {link = "PreProc"},
  rubyAttribute = {link = "PreProc"},
  vbMethods = {link = "PreProc"},
  vbPreProc = {link = "PreProc"},
  xmlDocTypeDecl = {link = "PreProc"},
  xmlDocTypeKeyword = {link = "PreProc"},
  yamlDocumentEnd = {link = "PreProc"},
  yamlDocumentStart = {link = "PreProc"},
  ["@preproc"] = {link = "PreProc"},
  Question = {fg = "seagreen", bold = true},
  RedrawDebugClear = {bg = "yellow"},
  RedrawDebugComposed = {bg = "green"},
  RedrawDebugNormal = {reverse = true},
  RedrawDebugRecompose = {bg = "red"},
  Search = {fg = "#f0a0c0", bg = "#302028", underline = true},
  CurSearch = {link = "Search"},
  QuickFixLine = {link = "Search"},
  Substitute = {link = "Search"},
  SignColumn = {fg = "#777777", bg = "#151515"},
  CursorLineSign = {link = "SignColumn"},
  Debug = {link = "Special"},
  Delimiter = {link = "Special"},
  SpecialChar = {link = "Special"},
  SpecialComment = {link = "Special"},
  Tag = {link = "Special"},
  cssAttrComma = {link = "Special"},
  cssCustomProp = {link = "Special"},
  cssFontDescriptor = {link = "Special"},
  cssImportant = {link = "Special"},
  cssMediaType = {link = "Special"},
  cssSelectorOp = {link = "Special"},
  cssSelectorOp2 = {link = "Special"},
  cssUnicodeEscape = {link = "Special"},
  htmlCssDefinition = {link = "Special"},
  htmlSpecialChar = {link = "Special"},
  javaScript = {link = "Special"},
  javaScriptEmbed = {link = "Special"},
  javaScriptSpecial = {link = "Special"},
  jsFuncArgs = {link = "Special"},
  markdownEscape = {link = "Special"},
  typescriptCall = {link = "Special"},
  vbEvents = {link = "Special"},
  xmlEntity = {link = "Special"},
  yamlBlockMappingMerge = {link = "Special"},
  yamlFlowIndicator = {link = "Special"},
  yamlFlowMappingMerge = {link = "Special"},
  yamlKeyValueDelimiter = {link = "Special"},
  yamlMappingKeyStart = {link = "Special"},
  ["@function.builtin"] = {link = "Special"},
  SpecialKey = {fg = "blue"},
  SpellBad = {sp = "red", undercurl = true},
  SpellCap = {sp = "blue", undercurl = true},
  SpellLocal = {sp = "darkcyan", undercurl = true},
  SpellRare = {sp = "magenta", undercurl = true},
  Conditional = {link = "Statement"},
  Exception = {link = "Statement"},
  Repeat = {link = "Statement"},
  cssAtRuleLogical = {link = "Statement"},
  cssTagName = {link = "Statement"},
  dtdEntity = {link = "Statement"},
  dtdTagName = {link = "Statement"},
  htmlStatement = {link = "Statement"},
  htmlTag = {link = "Statement"},
  javaScriptStatement = {link = "Statement"},
  luaStatement = {link = "Statement"},
  vbKeyword = {link = "Statement"},
  vbStatement = {link = "Statement"},
  xmlCdataCdata = {link = "Statement"},
  StatusLine = {bold = true, reverse = true},
  MsgSeparator = {link = "StatusLine"},
  StatusLineNC = {reverse = true},
  StorageClass = {fg = "#c59f6f"},
  cssProp = {link = "StorageClass"},
  xmlAttrib = {link = "StorageClass"},
  ["@storageclass"] = {link = "StorageClass"},
  NvimString = {link = "String"},
  cssAttributeSelector = {link = "String"},
  cssStringQ = {link = "String"},
  cssStringQQ = {link = "String"},
  cssURL = {link = "String"},
  htmlPreAttr = {link = "String"},
  htmlString = {link = "String"},
  htmlValue = {link = "String"},
  javaScriptRegexpString = {link = "String"},
  javaScriptStringD = {link = "String"},
  javaScriptStringS = {link = "String"},
  javaScriptStringT = {link = "String"},
  luaString = {link = "String"},
  luaString2 = {link = "String"},
  markdownUrlTitle = {link = "String"},
  vbString = {link = "String"},
  xmlCdata = {link = "String"},
  xmlString = {link = "String"},
  yamlString = {link = "String"},
  yamlTagHandle = {link = "String"},
  yamlTagPrefix = {link = "String"},
  ["@string"] = {link = "String"},
  StringDelimiter = {fg = "#556633"},
  rubyStringDelimiter = {link = "StringDelimiter"},
  TabLine = {bg = "lightgrey", underline = true},
  TabLineFill = {reverse = true},
  TabLineSel = {bold = true},
  TelescopeBorder = {},
  TelescopeMatching = {},
  TelescopeMultiIcon = {},
  TelescopeMultiSelection = {},
  TelescopeNormal = {},
  TelescopePreviewBlock = {},
  TelescopePreviewBorder = {},
  TelescopePreviewCharDev = {},
  TelescopePreviewDate = {},
  TelescopePreviewDirectory = {},
  TelescopePreviewExecute = {},
  TelescopePreviewGroup = {},
  TelescopePreviewHyphen = {},
  TelescopePreviewLine = {},
  TelescopePreviewLink = {},
  TelescopePreviewMatch = {},
  TelescopePreviewMessage = {},
  TelescopePreviewMessageFillchar = {},
  TelescopePreviewNormal = {},
  TelescopePreviewPipe = {},
  TelescopePreviewRead = {},
  TelescopePreviewSize = {},
  TelescopePreviewSocket = {},
  TelescopePreviewSticky = {},
  TelescopePreviewTitle = {},
  TelescopePreviewUser = {},
  TelescopePreviewWrite = {},
  TelescopePromptBorder = {},
  TelescopePromptCounter = {},
  TelescopePromptNormal = {},
  TelescopePromptPrefix = {},
  TelescopePromptTitle = {},
  TelescopeResultsBorder = {},
  TelescopeResultsClass = {},
  TelescopeResultsComment = {},
  TelescopeResultsConstant = {},
  TelescopeResultsDiffAdd = {},
  TelescopeResultsDiffChange = {},
  TelescopeResultsDiffDelete = {},
  TelescopeResultsDiffUntracked = {},
  TelescopeResultsField = {},
  TelescopeResultsFunction = {},
  TelescopeResultsIdentifier = {},
  TelescopeResultsLineNr = {},
  TelescopeResultsMethod = {},
  TelescopeResultsNormal = {},
  TelescopeResultsNumber = {},
  TelescopeResultsOperator = {},
  TelescopeResultsSpecialComment = {},
  TelescopeResultsStruct = {},
  TelescopeResultsTitle = {},
  TelescopeResultsVariable = {},
  TelescopeSelection = {},
  TelescopeSelectionCaret = {},
  TelescopeTitle = {},
  TermCursor = {reverse = true},
  Title = {fg = "magenta", bold = true},
  FidgetTitle = {link = "Title"},
  FloatTitle = {link = "Title"},
  htmlH1 = {link = "Title"},
  htmlTitle = {link = "Title"},
  ["@text.title"] = {link = "Title"},
  dtdTodo = {link = "Todo"},
  javaScriptCommentTodo = {link = "Todo"},
  luaTodo = {link = "Todo"},
  vbTodo = {link = "Todo"},
  xmlTodo = {link = "Todo"},
  yamlTodo = {link = "Todo"},
  NvimNumberPrefix = {link = "Type"},
  NvimOptionSigil = {link = "Type"},
  Structure = {link = "Type"},
  Typedef = {link = "Type"},
  dtdType = {link = "Type"},
  htmlArg = {link = "Type"},
  javaScriptType = {link = "Type"},
  markdownId = {link = "Type"},
  typescriptClassName = {link = "Type"},
  vbTypeSpecifier = {link = "Type"},
  vbTypes = {link = "Type"},
  xmlCdataEnd = {link = "Type"},
  xmlCdataStart = {link = "Type"},
  xmlProcessing = {link = "Type"},
  yamlAlias = {link = "Type"},
  yamlAnchor = {link = "Type"},
  yamlNodeTag = {link = "Type"},
  ["@lsp.type.type"] = {link = "Type"},
  ["@type"] = {link = "Type"},
  Underlined = {fg = "slateblue", underline = true},
  htmlLink = {link = "Underlined"},
  ["@text.underline"] = {link = "Underlined"},
  ["@text.uri"] = {link = "Underlined"},
  VertSplit = {fg = "#777777", bg = "#222222"},
  WinSeparator = {link = "VertSplit"},
  Visual = {bg = "#404040"},
  WarningMsg = {fg = "red"},
  WhichKey = {},
  WhichKeyBorder = {},
  WhichKeyDesc = {},
  WhichKeyFloat = {},
  WhichKeyGroup = {},
  WhichKeySeparator = {},
  WhichKeyValue = {},
  WildMenu = {fg = "black", bg = "yellow"},
  WinBar = {bold = true},
  WinBarNC = {link = "WinBar"},
  htmlBold = {bold = true},
  markdownBold = {link = "htmlBold"},
  htmlBoldItalic = {bold = true, italic = true},
  htmlItalicBold = {link = "htmlBoldItalic"},
  markdownBoldItalic = {link = "htmlBoldItalic"},
  htmlBoldUnderline = {bold = true, underline = true},
  htmlUnderlineBold = {link = "htmlBoldUnderline"},
  htmlBoldUnderlineItalic = {bold = true, italic = true, underline = true},
  htmlBoldItalicUnderline = {link = "htmlBoldUnderlineItalic"},
  htmlItalicBoldUnderline = {link = "htmlBoldUnderlineItalic"},
  htmlItalicUnderlineBold = {link = "htmlBoldUnderlineItalic"},
  htmlUnderlineBoldItalic = {link = "htmlBoldUnderlineItalic"},
  htmlUnderlineItalicBold = {link = "htmlBoldUnderlineItalic"},
  htmlItalic = {italic = true},
  markdownItalic = {link = "htmlItalic"},
  htmlStrike = {strikethrough = true},
  markdownStrike = {link = "htmlStrike"},
  htmlUnderline = {underline = true},
  htmlUnderlineItalic = {italic = true, underline = true},
  htmlItalicUnderline = {link = "htmlUnderlineItalic"},
  -- FIXME: lCursor = {fg = "bg", bg = "fg"},
  ["lualine_a_inactive"] = {fg = "#d4d4d4", bg = "#3c3c3c", bold = true},
  ["lualine_a_buffers_inactive"] = {link = "lualine_a_inactive"},
  ["lualine_z_tabs_inactive"] = {link = "lualine_a_inactive"},
  ["lualine_a_insert"] = {fg = "#262626", bg = "#569cd6", bold = true},
  ["lualine_a_normal"] = {fg = "#262626", bg = "#98c379", bold = true},
  ["lualine_a_buffers_active"] = {link = "lualine_a_normal"},
  ["lualine_z_tabs_active"] = {link = "lualine_a_normal"},
  ["lualine_a_replace"] = {fg = "#262626", bg = "#d16969", bold = true},
  ["lualine_a_visual"] = {fg = "#262626", bg = "#c586c0", bold = true},
  ["lualine_b_diagnostics_error_command"] = {fg = "#ff0000", bg = "#262626"},
  ["lualine_b_diagnostics_error_inactive"] = {fg = "#ff0000", bg = "#569cd6"},
  ["lualine_b_diagnostics_error_insert"] = {fg = "#ff0000", bg = "#262626"},
  ["lualine_b_diagnostics_error_normal"] = {fg = "#ff0000", bg = "#262626"},
  ["lualine_b_diagnostics_error_replace"] = {fg = "#ff0000", bg = "#262626"},
  ["lualine_b_diagnostics_error_terminal"] = {fg = "#ff0000", bg = "#262626"},
  ["lualine_b_diagnostics_error_visual"] = {fg = "#ff0000", bg = "#262626"},
  ["lualine_b_diagnostics_hint_command"] = {fg = "#d3d3d3", bg = "#262626"},
  ["lualine_b_diagnostics_hint_inactive"] = {fg = "#d3d3d3", bg = "#569cd6"},
  ["lualine_b_diagnostics_hint_insert"] = {fg = "#d3d3d3", bg = "#262626"},
  ["lualine_b_diagnostics_hint_normal"] = {fg = "#d3d3d3", bg = "#262626"},
  ["lualine_b_diagnostics_hint_replace"] = {fg = "#d3d3d3", bg = "#262626"},
  ["lualine_b_diagnostics_hint_terminal"] = {fg = "#d3d3d3", bg = "#262626"},
  ["lualine_b_diagnostics_hint_visual"] = {fg = "#d3d3d3", bg = "#262626"},
  ["lualine_b_diagnostics_info_command"] = {fg = "#add8e6", bg = "#262626"},
  ["lualine_b_diagnostics_info_inactive"] = {fg = "#add8e6", bg = "#569cd6"},
  ["lualine_b_diagnostics_info_insert"] = {fg = "#add8e6", bg = "#262626"},
  ["lualine_b_diagnostics_info_normal"] = {fg = "#add8e6", bg = "#262626"},
  ["lualine_b_diagnostics_info_replace"] = {fg = "#add8e6", bg = "#262626"},
  ["lualine_b_diagnostics_info_terminal"] = {fg = "#add8e6", bg = "#262626"},
  ["lualine_b_diagnostics_info_visual"] = {fg = "#add8e6", bg = "#262626"},
  ["lualine_b_diagnostics_warn_command"] = {fg = "#ffa500", bg = "#262626"},
  ["lualine_b_diagnostics_warn_inactive"] = {fg = "#ffa500", bg = "#569cd6"},
  ["lualine_b_diagnostics_warn_insert"] = {fg = "#ffa500", bg = "#262626"},
  ["lualine_b_diagnostics_warn_normal"] = {fg = "#ffa500", bg = "#262626"},
  ["lualine_b_diagnostics_warn_replace"] = {fg = "#ffa500", bg = "#262626"},
  ["lualine_b_diagnostics_warn_terminal"] = {fg = "#ffa500", bg = "#262626"},
  ["lualine_b_diagnostics_warn_visual"] = {fg = "#ffa500", bg = "#262626"},
  ["lualine_b_diff_added_command"] = {fg = "#008000", bg = "#262626"},
  ["lualine_b_diff_added_inactive"] = {fg = "#008000", bg = "#569cd6"},
  ["lualine_b_diff_added_insert"] = {fg = "#008000", bg = "#262626"},
  ["lualine_b_diff_added_normal"] = {fg = "#008000", bg = "#262626"},
  ["lualine_b_diff_added_replace"] = {fg = "#008000", bg = "#262626"},
  ["lualine_b_diff_added_terminal"] = {fg = "#008000", bg = "#262626"},
  ["lualine_b_diff_added_visual"] = {fg = "#008000", bg = "#262626"},
  ["lualine_b_diff_modified_command"] = {fg = "#ff00ff", bg = "#262626"},
  ["lualine_b_diff_modified_inactive"] = {fg = "#ff00ff", bg = "#569cd6"},
  ["lualine_b_diff_modified_insert"] = {fg = "#ff00ff", bg = "#262626"},
  ["lualine_b_diff_modified_normal"] = {fg = "#ff00ff", bg = "#262626"},
  ["lualine_b_diff_modified_replace"] = {fg = "#ff00ff", bg = "#262626"},
  ["lualine_b_diff_modified_terminal"] = {fg = "#ff00ff", bg = "#262626"},
  ["lualine_b_diff_modified_visual"] = {fg = "#ff00ff", bg = "#262626"},
  ["lualine_b_diff_removed_command"] = {fg = "#ff0000", bg = "#262626"},
  ["lualine_b_diff_removed_inactive"] = {fg = "#ff0000", bg = "#569cd6"},
  ["lualine_b_diff_removed_insert"] = {fg = "#ff0000", bg = "#262626"},
  ["lualine_b_diff_removed_normal"] = {fg = "#ff0000", bg = "#262626"},
  ["lualine_b_diff_removed_replace"] = {fg = "#ff0000", bg = "#262626"},
  ["lualine_b_diff_removed_terminal"] = {fg = "#ff0000", bg = "#262626"},
  ["lualine_b_diff_removed_visual"] = {fg = "#ff0000", bg = "#262626"},
  ["lualine_b_inactive"] = {fg = "#262626", bg = "#569cd6"},
  ["lualine_b_insert"] = {fg = "#569cd6", bg = "#262626"},
  ["lualine_b_normal"] = {fg = "#98c379", bg = "#262626"},
  ["lualine_b_replace"] = {fg = "#d16969", bg = "#262626"},
  ["lualine_b_visual"] = {fg = "#c586c0", bg = "#262626"},
  ["lualine_c_insert"] = {fg = "#d4d4d4", bg = "#262626"},
  ["lualine_c_normal"] = {fg = "#d4d4d4", bg = "#262626"},
  ["lualine_c_replace"] = {fg = "#d4d4d4", bg = "#262626"},
  ["lualine_transitional_lualine_a_buffers_inactive_to_lualine_a_buffers_active"] = {fg = "#3c3c3c", bg = "#98c379"},
  rubyRegexp = {fg = "#dd0093"},
  rubyRegexpDelimiter = {fg = "#540063"},
  rubyRegexpSpecial = {fg = "#a40073"},
  typescriptRegexpString = {link = "rubyRegexpSpecial"},
  -- rubySymbol = {fg = "#7697d6"},
  -- jsObjectKey = {link = "rubySymbol"},
  xmlTag = {fg = "#d787d7"},
  xmlEndTag = {link = "xmlTag"},
  xmlEqual = {link = "xmlTag"},
  xmlTagName = {link = "xmlTag"},
  ["@ibl.indent.char.1"] = {nocombine = true},
  ["@ibl.scope.char.1"] = {fg = "#777777", bg = "#151515", nocombine = true},
  ["@ibl.scope.underline.1"] = {sp = "#777777", underline = true},
  ["@ibl.whitespace.char.1"] = {nocombine = true},
}

-- colorschemes generally want to do this
vim.cmd("highlight clear")
vim.cmd("set t_Co=256")
vim.cmd("let g:colors_name='my_theme'")

-- apply highlight groups
for group, attrs in pairs(colors) do
  vim.api.nvim_set_hl(0, group, attrs)
end
